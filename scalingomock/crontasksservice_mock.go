// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Scalingo/go-scalingo/v4 (interfaces: CronTasksService)

// Package scalingomock is a generated GoMock package.
package scalingomock

import (
	reflect "reflect"

	scalingo "github.com/Scalingo/go-scalingo/v4"
	gomock "github.com/golang/mock/gomock"
)

// MockCronTasksService is a mock of CronTasksService interface.
type MockCronTasksService struct {
	ctrl     *gomock.Controller
	recorder *MockCronTasksServiceMockRecorder
}

// MockCronTasksServiceMockRecorder is the mock recorder for MockCronTasksService.
type MockCronTasksServiceMockRecorder struct {
	mock *MockCronTasksService
}

// NewMockCronTasksService creates a new mock instance.
func NewMockCronTasksService(ctrl *gomock.Controller) *MockCronTasksService {
	mock := &MockCronTasksService{ctrl: ctrl}
	mock.recorder = &MockCronTasksServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCronTasksService) EXPECT() *MockCronTasksServiceMockRecorder {
	return m.recorder
}

// CronTasksAdd mocks base method.
func (m *MockCronTasksService) CronTasksAdd(arg0 string, arg1 scalingo.CronTasks) (scalingo.CronTasks, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CronTasksAdd", arg0, arg1)
	ret0, _ := ret[0].(scalingo.CronTasks)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CronTasksAdd indicates an expected call of CronTasksAdd.
func (mr *MockCronTasksServiceMockRecorder) CronTasksAdd(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CronTasksAdd", reflect.TypeOf((*MockCronTasksService)(nil).CronTasksAdd), arg0, arg1)
}
