// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Scalingo/go-scalingo (interfaces: GithubLinkService)

// Package scalingomock is a generated GoMock package.
package scalingomock

import (
	go_scalingo "github.com/Scalingo/go-scalingo"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockGithubLinkService is a mock of GithubLinkService interface
type MockGithubLinkService struct {
	ctrl     *gomock.Controller
	recorder *MockGithubLinkServiceMockRecorder
}

// MockGithubLinkServiceMockRecorder is the mock recorder for MockGithubLinkService
type MockGithubLinkServiceMockRecorder struct {
	mock *MockGithubLinkService
}

// NewMockGithubLinkService creates a new mock instance
func NewMockGithubLinkService(ctrl *gomock.Controller) *MockGithubLinkService {
	mock := &MockGithubLinkService{ctrl: ctrl}
	mock.recorder = &MockGithubLinkServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGithubLinkService) EXPECT() *MockGithubLinkServiceMockRecorder {
	return m.recorder
}

// GithubLinkAdd mocks base method
func (m *MockGithubLinkService) GithubLinkAdd(arg0 string, arg1 go_scalingo.GithubLinkParams) (*go_scalingo.GithubLink, error) {
	ret := m.ctrl.Call(m, "GithubLinkAdd", arg0, arg1)
	ret0, _ := ret[0].(*go_scalingo.GithubLink)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GithubLinkAdd indicates an expected call of GithubLinkAdd
func (mr *MockGithubLinkServiceMockRecorder) GithubLinkAdd(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GithubLinkAdd", reflect.TypeOf((*MockGithubLinkService)(nil).GithubLinkAdd), arg0, arg1)
}

// GithubLinkDelete mocks base method
func (m *MockGithubLinkService) GithubLinkDelete(arg0, arg1 string) error {
	ret := m.ctrl.Call(m, "GithubLinkDelete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// GithubLinkDelete indicates an expected call of GithubLinkDelete
func (mr *MockGithubLinkServiceMockRecorder) GithubLinkDelete(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GithubLinkDelete", reflect.TypeOf((*MockGithubLinkService)(nil).GithubLinkDelete), arg0, arg1)
}

// GithubLinkManualDeploy mocks base method
func (m *MockGithubLinkService) GithubLinkManualDeploy(arg0, arg1, arg2 string) error {
	ret := m.ctrl.Call(m, "GithubLinkManualDeploy", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// GithubLinkManualDeploy indicates an expected call of GithubLinkManualDeploy
func (mr *MockGithubLinkServiceMockRecorder) GithubLinkManualDeploy(arg0, arg1, arg2 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GithubLinkManualDeploy", reflect.TypeOf((*MockGithubLinkService)(nil).GithubLinkManualDeploy), arg0, arg1, arg2)
}

// GithubLinkShow mocks base method
func (m *MockGithubLinkService) GithubLinkShow(arg0 string) (*go_scalingo.GithubLink, error) {
	ret := m.ctrl.Call(m, "GithubLinkShow", arg0)
	ret0, _ := ret[0].(*go_scalingo.GithubLink)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GithubLinkShow indicates an expected call of GithubLinkShow
func (mr *MockGithubLinkServiceMockRecorder) GithubLinkShow(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GithubLinkShow", reflect.TypeOf((*MockGithubLinkService)(nil).GithubLinkShow), arg0)
}

// GithubLinkUpdate mocks base method
func (m *MockGithubLinkService) GithubLinkUpdate(arg0, arg1 string, arg2 go_scalingo.GithubLinkParams) (*go_scalingo.GithubLink, error) {
	ret := m.ctrl.Call(m, "GithubLinkUpdate", arg0, arg1, arg2)
	ret0, _ := ret[0].(*go_scalingo.GithubLink)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GithubLinkUpdate indicates an expected call of GithubLinkUpdate
func (mr *MockGithubLinkServiceMockRecorder) GithubLinkUpdate(arg0, arg1, arg2 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GithubLinkUpdate", reflect.TypeOf((*MockGithubLinkService)(nil).GithubLinkUpdate), arg0, arg1, arg2)
}
